{"ast":null,"code":"import { Validators } from '@angular/forms'; // Import necessary modules\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction LoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\nfunction LoginComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.loading = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.loading = true;\n      const credentials = this.form.value;\n      this.userService.login(credentials).subscribe({\n        next: response => {\n          if (response && response.message === 'Login successful') {\n            this.userService.setUser(response.user);\n            alert('Login successful!');\n          } else {\n            this.errorMessage = 'Invalid email or password.';\n          }\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = 'An unexpected error occurred';\n          console.error('An unexpected error occurred:', error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 4,\n  consts: [[\"charset\", \"utf-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h4\", 2);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"button\", 9);\n      i0.ɵɵtemplate(20, LoginComponent_span_20_Template, 1, 0, \"span\", 10);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 11);\n      i0.ɵɵtext(23, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, LoginComponent_span_24_Template, 2, 1, \"span\", 12);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB,CAAC,CAAE;;;;;;;;ICoB1DC,2BAA2E;;;;;IAI7EA,gCAA+C;IAAAA,YAAkB;IAAAA,iBAAO;;;;IAAzBA,eAAkB;IAAlBA,yCAAkB;;;ADjB3E,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAHjE,YAAO,GAAG,KAAK;IACf,iBAAY,GAAG,EAAE;EAEiE;EAElFC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACL,IAAI,CAACM,KAAK,EAAE;MACnB,IAAI,CAACC,OAAO,GAAG,IAAI;MAEnB,MAAMC,WAAW,GAAG,IAAI,CAACR,IAAI,CAACS,KAAK;MAEnC,IAAI,CAACX,WAAW,CAACY,KAAK,CAACF,WAAW,CAAC,CAACG,SAAS,CAAC;QAC5CC,IAAI,EAAGC,QAAa,IAAI;UACtB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,KAAK,kBAAkB,EAAE;YACvD,IAAI,CAAChB,WAAW,CAACiB,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC;YACvCC,KAAK,CAAC,mBAAmB,CAAC;WAC3B,MAAM;YACL,IAAI,CAACC,YAAY,GAAG,4BAA4B;;UAElD,IAAI,CAACX,OAAO,GAAG,KAAK;QACtB,CAAC;QACDY,KAAK,EAAGA,KAAU,IAAI;UACpB,IAAI,CAACD,YAAY,GAAG,8BAA8B;UAClDE,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,IAAI,CAACZ,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;;EAEN;;AArCWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP3B/B,4BAAM;MAEJA,0BAAwB;MAE1BA,iBAAO;MACPA,4BAAM;MAEsBA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACfA;QAAA,OAAYgC,cAAU;MAAA,EAAC;MAC3BhC,+BAAkB;MACUA,sBAAK;MAAAA,iBAAQ;MACvCA,4BAAkE;MACpEA,iBAAM;MACNA,+BAAkB;MACUA,yBAAQ;MAAAA,iBAAQ;MAC1CA,4BAAyE;MAC3EA,iBAAM;MACNA,4BAAK;MAEDA,oEAA2E;MAC3EA,wBACF;MAAAA,iBAAS;MACTA,8BAAiD;MAAAA,yBAAQ;MAAAA,iBAAI;MAC7DA,oEAAwE;MAC1EA,iBAAM;;;MAhBsBA,eAAkB;MAAlBA,oCAAkB;MAUpCA,gBAAoB;MAApBA,sCAAoB;MACnBA,eAAa;MAAbA,kCAAa;MAIfA,eAAkB;MAAlBA,uCAAkB","names":["Validators","i0","LoginComponent","constructor","formBuilder","userService","ngOnInit","form","group","email","required","password","onSubmit","valid","loading","credentials","value","login","subscribe","next","response","message","setUser","user","alert","errorMessage","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';  // Import necessary modules\r\nimport { UserService } from './user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;  // Define the form property\r\n  loading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private formBuilder: FormBuilder, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loading = true;\r\n\r\n      const credentials = this.form.value;\r\n\r\n      this.userService.login(credentials).subscribe({\r\n        next: (response: any) => {\r\n          if (response && response.message === 'Login successful') {\r\n            this.userService.setUser(response.user);\r\n            alert('Login successful!');\r\n          } else {\r\n            this.errorMessage = 'Invalid email or password.';\r\n          }\r\n          this.loading = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.errorMessage = 'An unexpected error occurred';\r\n          console.error('An unexpected error occurred:', error);\r\n          this.loading = false;\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Email</label>\r\n          <input type=\"text\" formControlName=\"email\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Password</label>\r\n          <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Login\r\n          </button>\r\n          <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n          <span *ngIf=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}