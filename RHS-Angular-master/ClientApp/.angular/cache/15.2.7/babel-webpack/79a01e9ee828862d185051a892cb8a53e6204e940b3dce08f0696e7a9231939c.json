{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./items.service\";\nexport class ItemformComponent {\n  //constructor(private _formbuilder: FormBuilder, private _router: Router, private _http: HttpClient)\n  constructor(_formbuilder, _router, _route, _itemService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._itemService = _itemService;\n    this.isEditMode = false;\n    this.itemId = -1;\n    this.itemForm = _formbuilder.group({\n      category: ['', Validators.required],\n      location: ['', Validators.required],\n      rooms: [1, Validators.required],\n      area: ['', Validators.required],\n      renting: ['', Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ItemCreate form submitted\");\n    console.log(this.itemForm);\n    const newItem = this.itemForm.value;\n    /*const createUrl = \"api/item/create\";\r\n    this._http.post<any>(createUrl, newItem).subscribe(response => {\r\n      if (response.success) {\r\n        console.log(response.message);\r\n        alert('Item created successfully');\r\n        this._router.navigate(['/items']);\r\n      } else {\r\n        console.log('Item creation failed')\r\n      }\r\n    });*/\n    if (this.isEditMode) {\n      this._itemService.updateItem(this.itemId, newItem).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          alert('Item updated successfully');\n          this._router.navigate(['/items']);\n        } else {\n          console.log('Item update failed');\n        }\n      });\n    } else {\n      this._itemService.createItem(newItem).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          alert('Item created successfully');\n          this._router.navigate(['/items']);\n        } else {\n          console.log('Item creation failed');\n        }\n      });\n    }\n  }\n  backToItems() {\n    this._router.navigate(['/items']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.itemId = +params['id'];\n        this.loadItemForEdit(this.itemId);\n      }\n    });\n  }\n  loadItemForEdit(itemId) {\n    this._itemService.getItemById(itemId).subscribe(item => {\n      console.log('retrived item: ', item);\n      this.itemForm.patchValue({\n        category: item.Category,\n        location: item.Location,\n        rooms: item.Rooms,\n        area: item.Area,\n        renting: item.Renting,\n        description: item.Description,\n        imageUrl: item.ImageUrl\n      });\n    }, error => {\n      console.error('Error loading item for edit:', error);\n    });\n  }\n}\nItemformComponent.ɵfac = function ItemformComponent_Factory(t) {\n  return new (t || ItemformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.itemService));\n};\nItemformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemformComponent,\n  selectors: [[\"app-items-itemform\"]],\n  decls: 55,\n  vars: 4,\n  consts: [[\"charset\", \"utf-8\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"category\"], [\"type\", \"text\", \"id\", \"category\", \"formControlName\", \"category\", 1, \"form-control\", \"bg-light\"], [\"value\", \"House\"], [\"value\", \"Dorm\"], [\"value\", \"Apartment\"], [\"value\", \"Semi-detached house\"], [\"value\", \"Cottage\"], [\"value\", \"Townhouses\"], [\"value\", \"Other\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", 1, \"form-control\", \"bg-light\"], [\"for\", \"rooms\"], [\"type\", \"number\", \"id\", \"rooms\", \"formControlName\", \"rooms\", 1, \"form-control\", \"bg-light\"], [\"for\", \"area\"], [\"type\", \"number\", \"id\", \"area\", \"formControlName\", \"area\", 1, \"form-control\", \"bg-light\"], [\"for\", \"renting\"], [\"type\", \"number\", \"id\", \"renting\", \"formControlName\", \"renting\", 1, \"form-control\", \"bg-light\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\", \"bg-light\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\", \"bg-light\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-outline-secondary\", 3, \"click\"]],\n  template: function ItemformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"h2\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ItemformComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 4)(12, \"option\", 5);\n      i0.ɵɵtext(13, \"House\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 6);\n      i0.ɵɵtext(15, \"Dorm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 7);\n      i0.ɵɵtext(17, \"Apartment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 8);\n      i0.ɵɵtext(19, \"Semi-detached house\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 9);\n      i0.ɵɵtext(21, \"Cottage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 10);\n      i0.ɵɵtext(23, \"Townhouses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"option\", 11);\n      i0.ɵɵtext(25, \"Other\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 12);\n      i0.ɵɵtext(28, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 2)(31, \"label\", 14);\n      i0.ɵɵtext(32, \"Rooms:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 2)(35, \"label\", 16);\n      i0.ɵɵtext(36, \"Area:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 2)(39, \"label\", 18);\n      i0.ɵɵtext(40, \"Renting:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 2)(43, \"label\", 20);\n      i0.ɵɵtext(44, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 2)(47, \"label\", 22);\n      i0.ɵɵtext(48, \"ImageUrl:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"br\");\n      i0.ɵɵelementStart(51, \"button\", 24);\n      i0.ɵɵtext(52);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"a\", 25);\n      i0.ɵɵlistener(\"click\", function ItemformComponent_Template_a_click_53_listener() {\n        return ctx.backToItems();\n      });\n      i0.ɵɵtext(54, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update \" : \"Create a new \", \"Item\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n      i0.ɵɵadvance(44);\n      i0.ɵɵproperty(\"disabled\", ctx.itemForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update \" : \"Create \", \" Item\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","ItemformComponent","constructor","_formbuilder","_router","_route","_itemService","itemForm","group","category","required","location","rooms","area","renting","description","imageUrl","onSubmit","console","log","newItem","value","isEditMode","updateItem","itemId","subscribe","response","success","message","alert","navigate","createItem","backToItems","ngOnInit","params","loadItemForEdit","getItemById","item","patchValue","Category","Location","Rooms","Area","Renting","Description","ImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\items\\itemform.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\items\\itemform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n//import { HttpClient } from '@angular/common/http';\nimport { itemService } from './items.service';\n@Component({\n  selector: \"app-items-itemform\",\n  templateUrl: \"./itemform.component.html\"\n})\nexport class ItemformComponent {\n  itemForm: FormGroup;\n  isEditMode: boolean = false;\n  itemId: number = -1;\n  //constructor(private _formbuilder: FormBuilder, private _router: Router, private _http: HttpClient)\n  constructor(\n    private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _itemService: itemService) {\n    this.itemForm = _formbuilder.group({\n      category: ['', Validators.required],\n      location: ['', Validators.required],\n      rooms: [1, Validators.required],\n      area: ['', Validators.required],\n      renting: ['', Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ItemCreate form submitted\");\n    console.log(this.itemForm);\n    const newItem = this.itemForm.value;\n\n    /*const createUrl = \"api/item/create\";\n    this._http.post<any>(createUrl, newItem).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        alert('Item created successfully');\n        this._router.navigate(['/items']);\n      } else {\n        console.log('Item creation failed')\n      }\n    });*/\n    if (this.isEditMode) {\n      this._itemService.updateItem(this.itemId, newItem)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            alert('Item updated successfully');\n            this._router.navigate(['/items']);\n          } else {\n            console.log('Item update failed')\n          }\n        });\n\n    }\n    else {\n      this._itemService.createItem(newItem)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            alert('Item created successfully');\n            this._router.navigate(['/items']);\n          } else {\n            console.log('Item creation failed')\n          }\n        });\n    }\n  \n  }\n  backToItems() {\n    this._router.navigate(['/items']);\n  }\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      }\n      else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.itemId = +params['id'];\n        this.loadItemForEdit(this.itemId);\n\n      }\n    });\n  }\n  loadItemForEdit(itemId: number) {\n    this._itemService.getItemById(itemId).subscribe(\n        (item: any) => {\n          console.log('retrived item: ', item);\n        this.itemForm.patchValue({\n          category: item.Category,\n          location: item.Location,\n          rooms: item.Rooms,\n          area: item.Area,\n          renting: item.Renting,\n          description: item.Description,\n          imageUrl: item.ImageUrl\n        });\n        },\n        (error: any) => {\n          console.error('Error loading item for edit:', error);\n        }\n      );\n  }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title></title>\n</head>\n<body>\n  <h2>{{isEditMode ? 'Update ' : 'Create a new '}}Item</h2>\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"category\">Category:</label>\n      <select type=\"text\" id=\"category\"\n             formControlName=\"category\" class=\"form-control bg-light\">\n        <option value=\"House\">House</option>\n        <option value=\"Dorm\">Dorm</option>\n        <option value=\"Apartment\">Apartment</option>\n        <option value=\"Semi-detached house\">Semi-detached house</option>\n        <option value=\"Cottage\">Cottage</option>\n        <option value=\"Townhouses\">Townhouses</option>\n        <option value=\"Other\">Other</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"location\">Location:</label>\n      <input type=\"text\" id=\"location\"\n             formControlName=\"location\" class=\"form-control bg-light\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"rooms\">Rooms:</label>\n      <input type=\"number\" id=\"rooms\"\n             formControlName=\"rooms\" class=\"form-control bg-light \" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"area\">Area:</label>\n      <input type=\"number\" id=\"area\"\n             formControlName=\"area\" class=\"form-control bg-light\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"renting\">Renting:</label>\n      <input type=\"number\" id=\"renting\"\n             formControlName=\"renting\" class=\"form-control bg-light\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <input type=\"text\" id=\"description\"\n             formControlName=\"description\" class=\"form-control bg-light\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"imageUrl\">ImageUrl:</label>\n      <input type=\"text\" id=\"imageUrl\"\n             formControlName=\"imageUrl\" class=\"form-control bg-light\" />\n    </div>\n    <br />\n    <button class=\"btn btn-outline-primary\" type=\"submit\" [disabled]=\"itemForm.invalid\">{{isEditMode ? 'Update ' : 'Create '}} Item</button>\n    <a class=\"btn btn-outline-secondary\" (click)=\"backToItems()\" >Cancel</a>\n  </form>\n\n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}