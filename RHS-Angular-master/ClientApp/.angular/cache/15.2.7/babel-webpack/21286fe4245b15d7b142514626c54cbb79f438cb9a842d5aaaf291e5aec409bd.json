{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\nfunction LoginComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(userService, router, route, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n    this.loading = false;\n    this.errorMessage = '';\n    this.submitted = false;\n    this.form = this.formBuilder.group({\n      Email: ['', [Validators.required, Validators.email]],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.userService.login({\n      email: this.f.Email.value.toLowerCase(),\n      password: this.f.Password.value\n    }).subscribe({\n      next: response => {\n        if (response.authenticated) {\n          this.userService.setUser(response.user);\n          this.router.navigateByUrl('/');\n        } else {\n          if (response.userExists) {\n            this.errorMessage = 'Invalid password. Please try again.';\n          } else {\n            this.errorMessage = 'User not found. Please register.';\n          }\n        }\n        this.loading = false;\n      },\n      error: error => {\n        this.errorMessage = 'An unexpected error occurred';\n        console.error('An unexpected error occurred:', error);\n        this.loading = false;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[\"charset\", \"utf-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h4\", 2);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.credentials.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.credentials.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\")(19, \"button\", 9);\n      i0.ɵɵtemplate(20, LoginComponent_span_20_Template, 1, 0, \"span\", 10);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 11);\n      i0.ɵɵtext(23, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, LoginComponent_span_24_Template, 2, 1, \"span\", 12);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","userService","router","route","formBuilder","email","password","form","group","Email","required","Password","f","controls","onSubmit","submitted","invalid","loading","login","value","toLowerCase","subscribe","next","response","authenticated","setUser","user","navigateByUrl","userExists","errorMessage","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from './user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  credentials: { email: string; password: string } = { email: '', password: '' };\n  loading = false;\n  errorMessage = '';\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {\n    this.form = this.formBuilder.group({\n      Email: ['', [Validators.required, Validators.email]],\n      Password: ['', Validators.required],\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.userService\n      .login({\n        email: this.f.Email.value.toLowerCase(),\n        password: this.f.Password.value,\n      })\n      .subscribe({\n        next: (response: any) => {\n          if (response.authenticated) {\n            this.userService.setUser(response.user);\n            this.router.navigateByUrl('/');\n          } else {\n            if (response.userExists) {\n              this.errorMessage = 'Invalid password. Please try again.';\n            } else {\n              this.errorMessage = 'User not found. Please register.';\n            }\n          }\n          this.loading = false;\n        },\n        error: (error: any) => {\n          this.errorMessage = 'An unexpected error occurred';\n          console.error('An unexpected error occurred:', error);\n          this.loading = false;\n        },\n      });\n  }\n}\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Email</label>\r\n          <input type=\"text\" [(ngModel)]=\"credentials.email\" name=\"email\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Password</label>\r\n          <input type=\"password\" [(ngModel)]=\"credentials.password\" name=\"password\" class=\"form-control\" />\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Login\r\n          </button>\r\n          <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n          <span *ngIf=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}