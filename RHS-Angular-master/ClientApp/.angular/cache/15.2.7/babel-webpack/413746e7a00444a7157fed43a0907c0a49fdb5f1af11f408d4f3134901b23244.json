{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../users/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class NavMenuComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.isExpanded = false;\n  }\n  ngOnInit() {\n    this.userService.userChanged.subscribe(user => {\n      this.userName = user?.Name;\n    });\n  }\n  collapse() {\n    this.isExpanded = false;\n  }\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n  logout() {\n    console.log('NavMenu Logout called');\n    this.userService.logout();\n    this.router.navigate(['/']);\n  }\n}\nNavMenuComponent.ɵfac = function NavMenuComponent_Factory(t) {\n  return new (t || NavMenuComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nNavMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavMenuComponent,\n  selectors: [[\"app-nav-menu\"]],\n  decls: 8,\n  vars: 0,\n  consts: [[\"id\", \"header\", 1, \"fixed-top\"], [1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-lg-between\"], [1, \"logo\", \"me-auto\", \"me-lg-0\"], [\"href\", \"index.html\"], [\"id\", \"navbar\", 1, \"navbar\", \"navbar-expand-sm\", \"navbar-toggleable-sm\", \"navbar-light\", \"bg-white\", \"border-bottom\", \"box-shadow\", \"mb-3\"]],\n  template: function NavMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"h1\", 2)(3, \"a\", 3);\n      i0.ɵɵtext(4, \"HRS\");\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \".\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(7, \"nav\", 4);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"a.navbar-brand[_ngcontent-%COMP%] {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml[_ngcontent-%COMP%] {\\r\\n  font-size: 14px;\\r\\n}\\r\\n@media (min-width: 768px) {\\r\\n  html[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0U7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRSw4Q0FBOEM7QUFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJhLm5hdmJhci1icmFuZCB7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG59XHJcblxyXG5odG1sIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYm94LXNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAH5D,eAAU,GAAG,KAAK;EAGsD;EAExEC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,WAAW,CAACC,SAAS,CAAEC,IAAsB,IAAI;MAChE,IAAI,CAACC,QAAQ,GAAGD,IAAI,EAAEE,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,KAAK;EACzB;EAEAC,MAAM;IACJ,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAE,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAACb,WAAW,CAACW,MAAM,EAAE;IACzB,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AAxBWhB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,iCAAuC;MAGmBA,mBAAG;MAAAA,4BAAM;MAAAA,iBAAC;MAAAA,iBAAO;MAGvEA,yBAEM;MAERA,iBAAM","names":["NavMenuComponent","constructor","userService","router","ngOnInit","userChanged","subscribe","user","userName","Name","collapse","isExpanded","toggle","logout","console","log","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\shath\\source\\repos\\Web-Applikasjoner\\RHS-Angular\\RHS-Angular-master\\ClientApp\\src\\app\\nav-menu\\nav-menu.component.ts","C:\\Users\\shath\\source\\repos\\Web-Applikasjoner\\RHS-Angular\\RHS-Angular-master\\ClientApp\\src\\app\\nav-menu\\nav-menu.component.html"],"sourcesContent":["// nav-menu.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent implements OnInit {\r\n  isExpanded = false;\r\n  userName: string | undefined;\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.userChanged.subscribe((user: { Name: string }) => {\r\n      this.userName = user?.Name;\r\n    });\r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  logout(): void {\r\n    console.log('NavMenu Logout called');\r\n    this.userService.logout();\r\n    this.router.navigate(['/']); \r\n  }\r\n}\r\n","<!-- header.component.html -->\r\n\r\n<header id=\"header\" class=\"fixed-top \">\r\n  <div class=\"container d-flex align-items-center justify-content-lg-between\">\r\n\r\n    <h1 class=\"logo me-auto me-lg-0\"><a href=\"index.html\">HRS<span>.</span></a></h1>\r\n    <!-- Uncomment below if you prefer to use an image logo -->\r\n    <!-- <a href=\"index.html\" class=\"logo me-auto me-lg-0\"><img src=\"~/assets/img/logo.png\" alt=\"\" class=\"img-fluid\"></a>-->\r\n    <nav id=\"navbar\" class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n     \r\n    </nav>\r\n\r\n  </div>\r\n\r\n</header>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}