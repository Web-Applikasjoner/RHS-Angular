{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/47925/OneDrive - OsloMet/Skrivebord/webapp/RHS-Angular/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./user.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction RegisterComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\nfunction RegisterComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.registrationError, \" \");\n  }\n}\nexport class RegisterComponent {\n  constructor(http, router, userService) {\n    this.http = http;\n    this.router = router;\n    this.userService = userService;\n    this.baseUrl = 'api/user';\n    this.user = {};\n    this.confirmPassword = ''; // For password confirmation\n    this.loading = false;\n    this.registrationError = ''; // To display registration errors\n  }\n\n  register() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.user.password = yield _this.hashPassword(_this.user.password);\n        const registerUrl = `${_this.baseUrl}/register`;\n        const response = yield _this.http.post(registerUrl, {\n          Name: _this.user.Name,\n          Email: _this.user.Email,\n          Phone: _this.user.Phone,\n          Password: _this.user.password\n        }).toPromise();\n        console.log(response);\n        if (response && response === 'User registered successfully.') {\n          // Lagre brukerinformasjonen lokalt\n          _this.userService.setUser(_this.user);\n          _this.router.navigate(['/home']);\n        } else {\n          console.error('Registration failed. Unexpected server response:', response);\n          _this.registrationError = 'Registration failed. Please check your information and try again.';\n        }\n      } catch (error) {\n        if (error.status === 409) {\n          console.error('Registration failed. User with this email already exists.');\n          _this.registrationError = 'User with this email already exists. Please use a different email address.';\n        } else {\n          console.error('Registration failed', error);\n          _this.registrationError = 'Registration failed. Please check your information and try again.';\n        }\n      }\n    })();\n  }\n  login(credentials) {\n    const loginUrl = `${this.baseUrl}/login`;\n    return this.http.post(loginUrl, credentials);\n  }\n  hashPassword(password) {\n    return _asyncToGenerator(function* () {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(password);\n      const hashBuffer = yield crypto.subtle.digest('SHA-256', data);\n      const hashArray = Array.from(new Uint8Array(hashBuffer));\n      const hashedPassword = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n      return hashedPassword;\n    })();\n  }\n  cancel() {\n    this.router.navigate(['/login']);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 33,\n  vars: 7,\n  consts: [[\"charset\", \"utf-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"tel\", \"name\", \"Phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"alert\", \"alert-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h4\", 2);\n      i0.ɵɵtext(7, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.Name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.Email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 6);\n      i0.ɵɵtext(20, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user.Phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 6);\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.user.Password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\")(27, \"button\", 11);\n      i0.ɵɵtemplate(28, RegisterComponent_span_28_Template, 1, 0, \"span\", 12);\n      i0.ɵɵtext(29, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_30_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(31, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, RegisterComponent_div_32_Template, 2, 1, \"div\", 14);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationError);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  encapsulation: 2\n});\nRegisterComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterComponent,\n  factory: RegisterComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","http","router","userService","register","user","password","hashPassword","registerUrl","baseUrl","response","post","Name","Email","Phone","Password","toPromise","console","log","setUser","navigate","error","registrationError","status","login","credentials","loginUrl","encoder","TextEncoder","data","encode","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashedPassword","map","byte","toString","padStart","join","cancel","selectors","decls","vars","consts","template","ctx","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.html","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.ts"],"sourcesContent":["<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"register()\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Name</label>\r\n          <input type=\"text\" [(ngModel)]=\"user.Name\" name=\"Name\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Email</label>\r\n          <input type=\"email\" [(ngModel)]=\"user.Email\" name=\"Email\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Phone</label>\r\n          <input type=\"tel\" [(ngModel)]=\"user.Phone\" name=\"Phone\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Password</label>\r\n          <input type=\"password\" [(ngModel)]=\"user.Password\" name=\"Password\" class=\"form-control\" />\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Register\r\n          </button>\r\n          <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n          <div *ngIf=\"registrationError\" class=\"alert alert-danger\">\r\n            {{ registrationError }}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>\r\n","import { Component, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n  private baseUrl = 'api/user';\r\n  user: any = {};\r\n  confirmPassword = ''; // For password confirmation\r\n  loading = false;\r\n  registrationError = ''; // To display registration errors\r\n\r\n  constructor(private http: HttpClient, private router: Router, private userService: UserService) { }\r\n\r\n  async register(): Promise<void> {\r\n    try {\r\n      this.user.password = await this.hashPassword(this.user.password);\r\n      const registerUrl = `${this.baseUrl}/register`;\r\n\r\n      const response = await this.http.post(registerUrl, {\r\n        Name: this.user.Name,\r\n        Email: this.user.Email,\r\n        Phone: this.user.Phone,\r\n        Password: this.user.password\r\n      }).toPromise();\r\n\r\n      console.log(response);\r\n\r\n      if (response && response === 'User registered successfully.') {\r\n        // Lagre brukerinformasjonen lokalt\r\n        this.userService.setUser(this.user);\r\n        this.router.navigate(['/home']);\r\n      } else {\r\n        console.error('Registration failed. Unexpected server response:', response);\r\n        this.registrationError = 'Registration failed. Please check your information and try again.';\r\n      }\r\n    } catch (error: any) {\r\n      if (error.status === 409) {\r\n        console.error('Registration failed. User with this email already exists.');\r\n        this.registrationError = 'User with this email already exists. Please use a different email address.';\r\n      } else {\r\n        console.error('Registration failed', error);\r\n        this.registrationError = 'Registration failed. Please check your information and try again.';\r\n      }\r\n    }\r\n  }\r\n\r\n  login(credentials: { email: string, password: string }): Observable<any> {\r\n    const loginUrl = `${this.baseUrl}/login`;\r\n    return this.http.post(loginUrl, credentials);\r\n  }\r\n\r\n  private async hashPassword(password: string): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(password);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashedPassword = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\r\n    return hashedPassword;\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}