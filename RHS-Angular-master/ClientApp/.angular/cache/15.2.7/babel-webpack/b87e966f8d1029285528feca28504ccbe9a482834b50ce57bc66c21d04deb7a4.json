{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/47925/OneDrive - OsloMet/Skrivebord/webapp/RHS-Angular/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(userService, router, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.userForm = this.formBuilder.group({\n      Name: ['', Validators.required],\n      Email: ['', [Validators.required, Validators.email]],\n      Phone: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  register() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('User Registration form submitted');\n      console.log(_this.userForm);\n      if (_this.userForm.invalid) {\n        console.log('Form is invalid. Registration aborted.');\n        return;\n      }\n      const newUser = _this.userForm.value;\n      (yield _this.userService.register(newUser)).subscribe(response => {\n        console.log('Registration successful:', response);\n        _this.router.navigate(['/']);\n      }, error => {\n        console.error('Registration failed:', error);\n      });\n    })();\n  }\n  cancel() {\n    this.router.navigate(['/']);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[\"charset\", \"utf-8\"], [1, \"container\", \"mt-5\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ml-3\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.newUser.Name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.newUser.Email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.newUser.Phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.newUser.Password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"button\", 12);\n      i0.ɵɵtext(25, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_26_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(27, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAIA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAMnE,OAAM,MAAOC,iBAAiB;EAG5BC,YACUC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAEnB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MAChCI,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEMK,QAAQ;IAAA;IAAA;MACZC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CD,OAAO,CAACC,GAAG,CAAC,KAAI,CAACV,QAAQ,CAAC;MAE1B,IAAI,KAAI,CAACA,QAAQ,CAACW,OAAO,EAAE;QACzBF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD;;MAGF,MAAME,OAAO,GAAU,KAAI,CAACZ,QAAQ,CAACa,KAAK;MAE1C,OAAO,KAAI,CAAChB,WAAW,CAACW,QAAQ,CAACI,OAAO,CAAC,EAAEE,SAAS,CACjDC,QAAa,IAAI;QAChBN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,QAAQ,CAAC;QACjD,KAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC,EACAC,KAAU,IAAI;QACbR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CACF;IAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACpB,MAAM,CAACkB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AAxCWrB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT9BC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAGIA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,8BAAwB;MACJA,qBAAK;MAAAA,iBAAQ;MAC/BA,iCAA2G;MAAhDA;QAAA;MAAA,EAA0B;MAArFA,iBAA2G;MAG7GA,+BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,iCAA+G;MAAlDA;QAAA;MAAA,EAA2B;MAAxFA,iBAA+G;MAGjHA,+BAAwB;MACHA,uBAAM;MAAAA,iBAAQ;MACjCA,iCAA6G;MAAlDA;QAAA;MAAA,EAA2B;MAAtFA,iBAA6G;MAG/GA,+BAAwB;MACAA,0BAAS;MAAAA,iBAAQ;MACvCA,kCAA2H;MAAxDA;QAAA;MAAA,EAA8B;MAAjGA,iBAA2H;MAE7HA,sBAAM;MACNA,mCAA8C;MAAAA,yBAAQ;MAAAA,iBAAS;MAC/DA,mCAAwE;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAnB1BA,gBAA0B;MAA1BA,0CAA0B;MAKxBA,eAA2B;MAA3BA,2CAA2B;MAK7BA,eAA2B;MAA3BA,2CAA2B;MAKnBA,eAA8B;MAA9BA,8CAA8B","names":["Validators","RegisterComponent","constructor","userService","router","formBuilder","userForm","group","Name","required","Email","email","Phone","Password","register","console","log","invalid","newUser","value","subscribe","response","navigate","error","cancel","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { IUser } from './user';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent {\r\n  userForm: FormGroup;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.userForm = this.formBuilder.group({\r\n      Name: ['', Validators.required],\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      Phone: ['', Validators.required],\r\n      Password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  async register() {\r\n    console.log('User Registration form submitted');\r\n    console.log(this.userForm);\r\n\r\n    if (this.userForm.invalid) {\r\n      console.log('Form is invalid. Registration aborted.');\r\n      return;\r\n    }\r\n\r\n    const newUser: IUser = this.userForm.value;\r\n\r\n    (await this.userService.register(newUser)).subscribe(\r\n      (response: any) => {\r\n        console.log('Registration successful:', response);\r\n        this.router.navigate(['/']);\r\n      },\r\n      (error: any) => {\r\n        console.error('Registration failed:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n  <!-- register.component.html -->\r\n  <div class=\"container mt-5\">   \r\n    <form (ngSubmit)=\"register()\" class=\"needs-validation\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" class=\"form-control bg-light\" [(ngModel)]=\"newUser.Name\" name=\"name\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" class=\"form-control bg-light\" [(ngModel)]=\"newUser.Email\" name=\"email\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"phone\">Phone:</label>\r\n        <input type=\"tel\" id=\"phone\" class=\"form-control bg-light\" [(ngModel)]=\"newUser.Phone\" name=\"phone\" required>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" class=\"form-control bg-light\" [(ngModel)]=\"newUser.Password\" name=\"password\" required>\r\n      </div>\r\n      <br />\r\n      <button type=\"submit\" class=\"btn btn-primary\">Register</button>  \r\n      <button type=\"button\" class=\"btn btn-secondary ml-3\" (click)=\"cancel()\">Cancel</button>\r\n    </form>\r\n    </div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}