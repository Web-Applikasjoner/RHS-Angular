{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/47925/OneDrive - OsloMet/Skrivebord/webapp/RHS-Angular-master/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./user.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Password is required and must be at least 6 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n}\nfunction RegisterComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.registrationError, \" \");\n  }\n}\nexport class RegisterComponent {\n  constructor(http, router, userService) {\n    this.http = http;\n    this.router = router;\n    this.userService = userService;\n    this.baseUrl = 'api/user';\n    this.user = {};\n    this.confirmPassword = ''; // For password confirmation\n    this.loading = false;\n    this.registrationError = ''; // To display registration errors\n  }\n\n  register() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const registerUrl = `${_this.baseUrl}/register`;\n        const response = yield _this.http.post(registerUrl, {\n          Name: _this.user.Name,\n          Email: _this.user.Email.toLowerCase(),\n          Phone: _this.user.Phone,\n          Password: _this.user.Password\n        }, {\n          responseType: 'text',\n          observe: 'response'\n        }).toPromise();\n        console.log('Server Response:', response);\n        if (response?.status && response.status >= 200 && response.status < 300) {\n          _this.userService.setUser(_this.user);\n          _this.router.navigate(['/home']);\n          alert('User registered successfully!');\n        } else {\n          console.error('Unexpected server response:', response);\n        }\n      } catch (error) {\n        console.error('Registration failed', error);\n        if (error.status === 400) {\n          _this.registrationError = 'Invalid registration data. Please check your input.';\n        } else {\n          _this.registrationError = 'An unexpected error occurred during registration.';\n        }\n      } finally {\n        _this.loading = false;\n      }\n    })();\n  }\n  cancel() {\n    this.router.navigate(['/']);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 37,\n  vars: 10,\n  consts: [[\"charset\", \"utf-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"Name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"email\", \"name\", \"Email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"tel\", \"name\", \"Phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"Password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"alert\", \"alert-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h4\", 2);\n      i0.ɵɵtext(7, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.Name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 7);\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.user.Email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 7);\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.user.Phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 6)(26, \"label\", 7);\n      i0.ɵɵtext(27, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.user.Password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\")(31, \"button\", 13);\n      i0.ɵɵtemplate(32, RegisterComponent_span_32_Template, 1, 0, \"span\", 14);\n      i0.ɵɵtext(33, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_34_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(35, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(36, RegisterComponent_div_36_Template, 2, 1, \"div\", 16);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"Name\"].invalid && (_r0.controls[\"Name\"].dirty || _r0.controls[\"Name\"].touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"Email\"].invalid && (_r0.controls[\"Email\"].dirty || _r0.controls[\"Email\"].touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.Password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"Password\"].invalid && (_r0.controls[\"Password\"].dirty || _r0.controls[\"Password\"].touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading || _r0.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationError);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.NgModel, i5.NgForm],\n  encapsulation: 2\n});\nRegisterComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterComponent,\n  factory: RegisterComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","http","router","userService","register","registerUrl","baseUrl","response","post","Name","user","Email","toLowerCase","Phone","Password","responseType","observe","toPromise","console","log","status","setUser","navigate","alert","error","registrationError","loading","cancel","selectors","decls","vars","consts","template","ctx","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\register.component.html","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\register.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title></title>\n</head>\n<body>\n  <div class=\"card\">\n    <h4 class=\"card-header\">Register</h4>\n    <div class=\"card-body\">     \n\n      <form (ngSubmit)=\"register()\" #registerForm=\"ngForm\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Name</label>\n          <input type=\"text\" [(ngModel)]=\"user.Name\" name=\"Name\" class=\"form-control\" required />\n          <div *ngIf=\"registerForm.controls['Name'].invalid && (registerForm.controls['Name'].dirty || registerForm.controls['Name'].touched)\" class=\"text-danger\">\n            Name is required.\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Email</label>\n          <input type=\"email\" [(ngModel)]=\"user.Email\" name=\"Email\" class=\"form-control\" required />\n          <div *ngIf=\"registerForm.controls['Email'].invalid && (registerForm.controls['Email'].dirty || registerForm.controls['Email'].touched)\" class=\"text-danger\">\n            Please enter a valid email address.\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Phone</label>\n          <input type=\"tel\" [(ngModel)]=\"user.Phone\" name=\"Phone\" class=\"form-control\" />\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Password</label>\n          <input type=\"password\" [(ngModel)]=\"user.Password\" name=\"Password\" class=\"form-control\" required minlength=\"6\" />\n          <div *ngIf=\"registerForm.controls['Password'].invalid && (registerForm.controls['Password'].dirty || registerForm.controls['Password'].touched)\" class=\"text-danger\">\n            Password is required and must be at least 6 characters long.\n          </div>\n        </div>\n\n        <div>\n          <button [disabled]=\"loading || registerForm.invalid\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\n            Register\n          </button>\n          <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n          <div *ngIf=\"registrationError\" class=\"alert alert-danger\">\n            {{ registrationError }}\n          </div>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</body>\n</html>\n","import { Component, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n  private baseUrl = 'api/user';\n  user: any = {};\n  confirmPassword = ''; // For password confirmation\n  loading = false;\n  registrationError = ''; // To display registration errors\n\n  constructor(private http: HttpClient, private router: Router, private userService: UserService) { }\n\n  async register(): Promise<void> {\n    try {\n      \n      const registerUrl = `${this.baseUrl}/register`;\n\n      const response = await this.http.post(registerUrl, {\n        Name: this.user.Name,\n        Email: this.user.Email.toLowerCase(),\n        Phone: this.user.Phone,\n        Password: this.user.Password\n      }, { responseType: 'text', observe: 'response' }).toPromise();\n\n      console.log('Server Response:', response);\n\n      if (response?.status && response.status >= 200 && response.status < 300) {\n        \n        this.userService.setUser(this.user);\n        this.router.navigate(['/home']);\n        alert('User registered successfully!');\n\n      } else {\n        console.error('Unexpected server response:', response);\n      }\n    } catch (error: any) {\n      console.error('Registration failed', error);\n      if (error.status === 400) {\n        this.registrationError = 'Invalid registration data. Please check your input.';\n      } else {\n        this.registrationError = 'An unexpected error occurred during registration.';\n      }\n    }\n\n    finally {\n      this.loading = false;\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate(['/']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}