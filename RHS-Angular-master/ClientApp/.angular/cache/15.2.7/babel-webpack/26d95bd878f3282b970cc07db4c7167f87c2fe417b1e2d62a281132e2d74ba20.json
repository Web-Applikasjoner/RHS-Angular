{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, LoginComponent_div_14_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.Email.errors == null ? null : ctx_r0.f.Email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.Email.errors == null ? null : ctx_r0.f.Email.errors.email);\n  }\n}\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.Password.errors == null ? null : ctx_r1.f.Password.errors.required);\n  }\n}\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(userService, router, route, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n    this.loading = false;\n    this.errorMessage = '';\n    this.submitted = false;\n    this.form = this.formBuilder.group({\n      Email: ['', [Validators.required, Validators.email]],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.userService.login({\n      Email: this.f.Email.value.toLowerCase(),\n      Password: this.f.Password.value\n    }).subscribe({\n      next: response => {\n        if (response.authenticated) {\n          this.userService.setUser(response.user);\n          this.router.navigateByUrl('/');\n        } else {\n          if (response.userExists) {\n            this.errorMessage = 'Invalid password. Please try again.';\n          } else {\n            this.errorMessage = 'User not found. Please register.';\n          }\n        }\n        this.loading = false;\n      },\n      error: error => {\n        this.errorMessage = 'An unexpected error occurred';\n        console.error('An unexpected error occurred:', error);\n        this.loading = false;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"Email\"], [\"type\", \"email\", \"formControlName\", \"Email\", \"placeholder\", \"Enter your email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"Password\"], [\"type\", \"password\", \"formControlName\", \"Password\", \"placeholder\", \"Enter your password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [1, \"text-danger\"], [4, \"ngIf\"], [1, \"text-danger\", \"mt-2\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"header\");\n      i0.ɵɵelementStart(1, \"body\")(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"button\", 13);\n      i0.ɵɵtext(22, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 2, 1, \"div\", 14);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.Email.invalid && (ctx.f.Email.dirty || ctx.f.Email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.Password.invalid && (ctx.f.Password.dirty || ctx.f.Password.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICajDC,2BAAsC;IAAAA,iCAAiB;IAAAA,iBAAM;;;;;IAC7DA,2BAAmC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IAF/DA,+BAAuF;IACrFA,uEAA6D;IAC7DA,uEAA6D;IAC/DA,iBAAM;;;;IAFEA,eAA8B;IAA9BA,4FAA8B;IAC9BA,eAA2B;IAA3BA,yFAA2B;;;;;IAOjCA,2BAAyC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IADrEA,+BAAgG;IAC9FA,uEAAmE;IACrEA,iBAAM;;;;IADEA,eAAiC;IAAjCA,kGAAiC;;;;;IAKzCA,+BAAmD;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;ADpBrF,OAAM,MAAOC,cAAc;EAOzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,KAAqB,EACrBC,WAAwB;IAHxB,gBAAW,GAAXH,WAAW;IACX,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IAVrB,gBAAW,GAAwC;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAC9E,YAAO,GAAG,KAAK;IACf,iBAAY,GAAG,EAAE;IAEjB,cAAS,GAAG,KAAK;IAQf,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDM,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACa,QAAQ;KACnC,CAAC;EACJ;EAEA,IAAIE,CAAC;IACH,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAC3B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAAChB,WAAW,CACbiB,KAAK,CAAC;MACLT,KAAK,EAAE,IAAI,CAACG,CAAC,CAACH,KAAK,CAACU,KAAK,CAACC,WAAW,EAAE;MACvCT,QAAQ,EAAE,IAAI,CAACC,CAAC,CAACD,QAAQ,CAACQ;KAC3B,CAAC,CACDE,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAa,IAAI;QACtB,IAAIA,QAAQ,CAACC,aAAa,EAAE;UAC1B,IAAI,CAACvB,WAAW,CAACwB,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC;UACvC,IAAI,CAACxB,MAAM,CAACyB,aAAa,CAAC,GAAG,CAAC;SAC/B,MAAM;UACL,IAAIJ,QAAQ,CAACK,UAAU,EAAE;YACvB,IAAI,CAACC,YAAY,GAAG,qCAAqC;WAC1D,MAAM;YACL,IAAI,CAACA,YAAY,GAAG,kCAAkC;;;QAG1D,IAAI,CAACZ,OAAO,GAAG,KAAK;MACtB,CAAC;MACDa,KAAK,EAAGA,KAAU,IAAI;QACpB,IAAI,CAACD,YAAY,GAAG,8BAA8B;QAClDE,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACb,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACN;;AAzDWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR3BtC,yBAES;MACTA,4BAAM;MAK6BA,qBAAK;MAAAA,iBAAM;MACpCA,8BAAuB;MACIA;QAAA,OAAYuC,cAAU;MAAA,EAAC;MAC9CvC,+BAAwB;MACHA,sBAAK;MAAAA,iBAAQ;MAChCA,4BAA2G;MAC3GA,kEAGM;MACRA,iBAAM;MACNA,+BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAAoH;MACpHA,kEAEM;MACRA,iBAAM;MACNA,+BAAwB;MAC6CA,sBAAK;MAAAA,iBAAS;MACjFA,kEAA2E;MAC7EA,iBAAM;;;MAnBFA,eAAkB;MAAlBA,oCAAkB;MAIdA,eAA2D;MAA3DA,wFAA2D;MAQ3DA,eAAoE;MAApEA,iGAAoE;MAKlEA,eAAoB;MAApBA,sCAAoB;MACtBA,eAAkB;MAAlBA,uCAAkB","names":["Validators","i0","LoginComponent","constructor","userService","router","route","formBuilder","email","password","form","group","Email","required","Password","f","controls","onSubmit","submitted","invalid","loading","login","value","toLowerCase","subscribe","next","response","authenticated","setUser","user","navigateByUrl","userExists","errorMessage","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\users\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from './user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  credentials: { email: string; password: string } = { email: '', password: '' };\n  loading = false;\n  errorMessage = ''; \n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {\n    this.form = this.formBuilder.group({\n      Email: ['', [Validators.required, Validators.email]],\n      Password: ['', Validators.required],\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.userService\n      .login({\n        Email: this.f.Email.value.toLowerCase(),\n        Password: this.f.Password.value,\n      })\n      .subscribe({\n        next: (response: any) => {\n          if (response.authenticated) {\n            this.userService.setUser(response.user);            \n            this.router.navigateByUrl('/');\n          } else {\n            if (response.userExists) {\n              this.errorMessage = 'Invalid password. Please try again.';\n            } else {\n              this.errorMessage = 'User not found. Please register.';\n            }\n          }\n          this.loading = false;\n        },\n        error: (error: any) => {\n          this.errorMessage = 'An unexpected error occurred';\n          console.error('An unexpected error occurred:', error);\n          this.loading = false;\n        },\n      });\n  }\n}\n","<!-- login.component.html -->\r\n<header>\r\n\r\n</header>\r\n<body>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">Login</div>\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label for=\"Email\">Email</label>\r\n                <input type=\"email\" formControlName=\"Email\" class=\"form-control\" placeholder=\"Enter your email\" required />\r\n                <div *ngIf=\"f.Email.invalid && (f.Email.dirty || f.Email.touched)\" class=\"text-danger\">\r\n                  <div *ngIf=\"f.Email.errors?.required\">Email is required</div>\r\n                  <div *ngIf=\"f.Email.errors?.email\">Invalid email format</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"Password\">Password</label>\r\n                <input type=\"password\" formControlName=\"Password\" class=\"form-control\" placeholder=\"Enter your password\" required />\r\n                <div *ngIf=\"f.Password.invalid && (f.Password.dirty || f.Password.touched)\" class=\"text-danger\">\r\n                  <div *ngIf=\"f.Password.errors?.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n                <div *ngIf=\"errorMessage\" class=\"text-danger mt-2\">{{ errorMessage }}</div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}