{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/47925/OneDrive - OsloMet/Skrivebord/webapp/RHS-Angular/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, RegisterComponent_div_19_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.email.errors.email);\n  }\n}\nfunction RegisterComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.phone.errors.required);\n  }\n}\nfunction RegisterComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_29_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, RegisterComponent_div_29_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, RegisterComponent_div_29_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.password.errors.minlength);\n  }\n}\nfunction RegisterComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'api/user';\n  }\n  register(user) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      user.password = yield _this.hashPassword(user.password);\n      const registerUrl = `${_this.baseUrl}/register`;\n      yield _this.http.post(registerUrl, {\n        Name: user.Name,\n        Email: user.Email,\n        Phone: user.Phone,\n        Password: user.password\n      }).toPromise();\n    })();\n  }\n  login(credentials) {\n    const loginUrl = `${this.baseUrl}/login`;\n    return this.http.post(loginUrl, credentials);\n  }\n  hashPassword(password) {\n    return _asyncToGenerator(function* () {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(password);\n      const hashBuffer = yield crypto.subtle.digest('SHA-256', data);\n      const hashArray = Array.from(new Uint8Array(hashBuffer));\n      const hashedPassword = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n      return hashedPassword;\n    })();\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 36,\n  vars: 19,\n  consts: [[\"charset\", \"utf-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"tel\", \"formControlName\", \"phone\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h4\", 2);\n      i0.ɵɵtext(7, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 6);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 6);\n      i0.ɵɵtext(22, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 6);\n      i0.ɵɵtext(27, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 11);\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\")(31, \"button\", 12);\n      i0.ɵɵtemplate(32, RegisterComponent_span_32_Template, 1, 0, \"span\", 13);\n      i0.ɵɵtext(33, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"a\", 14);\n      i0.ɵɵtext(35, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.name.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f.phone.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.phone.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.RouterLink],\n  encapsulation: 2\n});\nRegisterComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterComponent,\n  factory: RegisterComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","http","register","user","password","hashPassword","registerUrl","baseUrl","post","Name","Email","Phone","Password","toPromise","login","credentials","loginUrl","encoder","TextEncoder","data","encode","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashedPassword","map","byte","toString","padStart","join","selectors","decls","vars","consts","template","ctx","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.html","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register.component.ts"],"sourcesContent":["<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Name</label>\r\n          <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Email</label>\r\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Invalid email address</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Phone</label>\r\n          <input type=\"tel\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n          <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.phone.errors.required\">Phone is required</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Password</label>\r\n          <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Register\r\n          </button>\r\n          <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>\r\n","import { Component, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n  @Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html'\r\n  })\r\nexport class RegisterComponent {\r\n  private baseUrl = 'api/user';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async register(user: any): Promise<void> {\r\n    user.password = await this.hashPassword(user.password);\r\n    const registerUrl = `${this.baseUrl}/register`;\r\n    await this.http.post(registerUrl, {\r\n      Name: user.Name,  \r\n      Email: user.Email,\r\n      Phone: user.Phone,\r\n      Password: user.password\r\n    }).toPromise();\r\n  }\r\n\r\n\r\n  login(credentials: { email: string, password: string }): Observable<any> {\r\n    const loginUrl = `${this.baseUrl}/login`;\r\n    return this.http.post(loginUrl, credentials);\r\n  }\r\n\r\n  private async hashPassword(password: string): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(password);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashedPassword = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\r\n    return hashedPassword;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}