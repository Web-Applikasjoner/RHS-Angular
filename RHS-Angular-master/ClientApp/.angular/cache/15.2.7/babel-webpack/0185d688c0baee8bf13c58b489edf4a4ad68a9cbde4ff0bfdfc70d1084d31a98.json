{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.newUser = {\n      Name: '',\n      Email: '',\n      Phone: '',\n      Password: ''\n    };\n  }\n  register() {\n    this.userService.register(this.newUser).ubscribe(response => {\n      console.log('Registration successful:', response);\n    }, error => {\n      console.error('Registration failed:', error);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[\"charset\", \"utf-8\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(6, \"label\", 2);\n      i0.ɵɵtext(7, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newUser.Name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.newUser.Email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.newUser.Phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.newUser.Password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵtext(19, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Phone);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.Password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,iBAAiB;EAQ5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAP/B,YAAO,GAAU;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAE+C;EAEhDC,QAAQ;IACN,IAAI,CAACL,WAAW,CAACK,QAAQ,CAAC,IAAI,CAACC,OAAO,CAAC,CAACC,QAAQ,CAACC,QAAQ,IAAG;MAC1DC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;IACjD,CAAC,EACAG,KAAK,IAAI;MACPF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACJ;;AAjBWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAEEA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,gCAAkB;MAAAA,qBAAK;MAAAA,iBAAQ;MAC/BA,gCAA6E;MAAhDA;QAAA;MAAA,EAA0B;MAAvDA,iBAA6E;MAE7EA,gCAAmB;MAAAA,uBAAM;MAAAA,iBAAQ;MACjCA,iCAAiF;MAAlDA;QAAA;MAAA,EAA2B;MAA1DA,iBAAiF;MAEjFA,iCAAmB;MAAAA,uBAAM;MAAAA,iBAAQ;MACjCA,iCAA+E;MAAlDA;QAAA;MAAA,EAA2B;MAAxDA,iBAA+E;MAE/EA,iCAAsB;MAAAA,0BAAS;MAAAA,iBAAQ;MACvCA,iCAA6F;MAAxDA;QAAA;MAAA,EAA8B;MAAnEA,iBAA6F;MAE7FA,mCAAsB;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAXVA,eAA0B;MAA1BA,0CAA0B;MAGxBA,eAA2B;MAA3BA,2CAA2B;MAG7BA,eAA2B;MAA3BA,2CAA2B;MAGnBA,eAA8B;MAA9BA,8CAA8B","names":["RegisterComponent","constructor","userService","Name","Email","Phone","Password","register","newUser","ubscribe","response","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register\\register.component.ts","C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular\\ClientApp\\src\\app\\users\\register\\register.component.html"],"sourcesContent":["// register.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { IUser } from '../user';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  })\r\nexport class RegisterComponent {\r\n  newUser: IUser = {\r\n    Name: '',\r\n    Email: '',\r\n    Phone: '',\r\n    Password: '',\r\n  };\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  register() {\r\n    this.userService.register(this.newUser).ubscribe(response => {\r\n      console.log('Registration successful:', response);\r\n      },\r\n      (error) => {\r\n         console.error('Registration failed:', error);\r\n    });\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n  <!-- register.component.html -->\r\n  <form (ngSubmit)=\"register()\">\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" id=\"name\" [(ngModel)]=\"newUser.Name\" name=\"name\" required>\r\n\r\n    <label for=\"email\">Email:</label>\r\n    <input type=\"email\" id=\"email\" [(ngModel)]=\"newUser.Email\" name=\"email\" required>\r\n\r\n    <label for=\"phone\">Phone:</label>\r\n    <input type=\"tel\" id=\"phone\" [(ngModel)]=\"newUser.Phone\" name=\"phone\" required>\r\n\r\n    <label for=\"password\">Password:</label>\r\n    <input type=\"password\" id=\"password\" [(ngModel)]=\"newUser.Password\" name=\"password\" required>\r\n\r\n    <button type=\"submit\">Register</button>\r\n  </form>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}