{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ItemsComponent = class ItemsComponent {\n  //constructor(private _http: HttpClient, private _router:Router) { }\n  constructor(_router, _itemService, authService) {\n    this._router = _router;\n    this._itemService = _itemService;\n    this.authService = authService;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    this.items = [];\n    this._listFilter = '';\n    /* items: IItem[] = */\n    this.filteredItems = this.items;\n    this.isGridView = true;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredItems = this.performFilter(value);\n  }\n  createNewItem() {\n    if (this.authService.isAuthenticated()) {\n      this._router.navigate(['/itemform', 'create', -1]);\n    } else {\n      alert('You need to log in before creating a new item.');\n      this._router.navigate(['/users/login']);\n    }\n  }\n  /*getItems(): void {\r\n    this._http.get<IItem[]>(\"api/item/\").subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      this.items = data;\r\n      this.filteredItems = this.items;\r\n    });*/\n  deleteItem(item) {\n    if (this.canDeleteItem(item)) {\n      const confirmDelete = confirm(`Are you sure you want to delete the \"${item.Category}\"?`);\n      if (confirmDelete) {\n        this._itemService.deleteItem(item.ItemId).subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this.filteredItems = this.filteredItems.filter(i => i !== item);\n          }\n        }, error => {\n          console.error('Error deleting item:', error);\n        });\n      }\n    } else {\n      alert('You do not have permission to delete this item.');\n    }\n  }\n  canUpdateItem(item) {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  onUpdateClick(item) {\n    if (this.canUpdateItem(item)) {\n      this._router.navigate(['/itemform', 'edit', item.ItemId]);\n    } else {\n      alert('You do not have permission to update this item.');\n    }\n  }\n  canDeleteItem(item) {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getItems() {\n    this._itemService.getItems().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.items = data;\n      this.filteredItems = this.items;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.items.filter(item => item.Category.toLowerCase().includes(filterBy) || item.Location.toLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToItemform() {\n    this._router.navigate(['/itemform']);\n  }\n  ngOnInit() {\n    this.getItems();\n  }\n  toggleView() {\n    this.isGridView = !this.isGridView;\n  }\n};\nItemsComponent = __decorate([Component({\n  selector: 'app-items-component',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})], ItemsComponent);\nexport { ItemsComponent };","map":{"version":3,"mappings":"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","names":["Component","ItemsComponent","constructor","_router","_itemService","authService","items","listFilter","_listFilter","value","console","log","filteredItems","performFilter","createNewItem","isAuthenticated","navigate","alert","deleteItem","item","canDeleteItem","confirmDelete","confirm","Category","ItemId","subscribe","response","success","message","filter","i","error","canUpdateItem","isAdmin","onUpdateClick","getItems","data","JSON","stringify","filterBy","toLocaleLowerCase","toLowerCase","includes","Location","toggleImage","displayImage","navigateToItemform","ngOnInit","toggleView","isGridView","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\47925\\OneDrive - OsloMet\\Skrivebord\\webapp\\RHS-Angular-master\\ClientApp\\src\\app\\items\\items.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IItem } from './item';\nimport { filter } from 'rxjs';\n//import { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { itemService } from './items.service';\nimport { AuthService } from '../shared/auth.service';\n\n@Component({\n  selector: 'app-items-component',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\n\nexport class ItemsComponent implements OnInit {\n  viewTitle: string = 'Table';\n  displayImage: boolean = true;\n  items: IItem[] = [];\n  //constructor(private _http: HttpClient, private _router:Router) { }\n  constructor(\n    private _router: Router,\n    private _itemService: itemService,\n    private authService: AuthService\n  ) { }\n  private _listFilter: string = '';\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredItems = this.performFilter(value);\n  }\n  createNewItem(): void {\n    if (this.authService.isAuthenticated()) {\n      this._router.navigate(['/itemform', 'create', -1]);\n    } else {\n      alert('You need to log in before creating a new item.');\n      this._router.navigate(['/users/login']);\n    }\n  }\n  /*getItems(): void {\n    this._http.get<IItem[]>(\"api/item/\").subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.items = data;\n      this.filteredItems = this.items;\n    });*/\n  deleteItem(item: IItem): void {\r\n    if (this.canDeleteItem(item)) {\r\n      const confirmDelete = confirm(`Are you sure you want to delete the \"${item.Category}\"?`);\r\n      if (confirmDelete) {\r\n        this._itemService.deleteItem(item.ItemId).subscribe(\r\n          (response) => {\r\n            if (response.success) {\r\n              console.log(response.message);\r\n              this.filteredItems = this.filteredItems.filter(i => i !== item);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.error('Error deleting item:', error);\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      alert('You do not have permission to delete this item.');\r\n    }\r\n  }\r\n\n  canUpdateItem(item: IItem): boolean {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true;\n    } else {      \n      return false;\n    }\n  }\n  onUpdateClick(item: IItem): void {\n    if (this.canUpdateItem(item)) {\n      this._router.navigate(['/itemform', 'edit', item.ItemId]);\n    } else {\n      alert('You do not have permission to update this item.');\n    }\n  }\n  canDeleteItem(item: IItem): boolean {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getItems(): void {\n    this._itemService.getItems()\n      .subscribe(data => {\n        console.log('All', JSON.stringify(data));\n        this.items = data;\n        this.filteredItems = this.items;\n      });\n  }\n\n  /* items: IItem[] = */\n  filteredItems: IItem[] = this.items;\n\n  performFilter(filterBy: string): IItem[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.items.filter((item: IItem) =>\n      item.Category.toLowerCase().includes(filterBy) ||\n      item.Location.toLowerCase().includes(filterBy)\n    );\n  }\n\n  toggleImage(): void {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToItemform() {\n    this._router.navigate(['/itemform']);\n  }\n  ngOnInit(): void {\n    this.getItems();\n  }\n\n  isGridView: boolean = true;\n\n  toggleView() {\n    this.isGridView = !this.isGridView;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}